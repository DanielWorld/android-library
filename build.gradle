apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release' // must be applied after your artifact generating plugin (eg. java / com.android.library)

buildscript {
    repositories {
        mavenCentral();
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.0'
        classpath 'com.novoda:bintray-release:0.7.0'
    }
}

repositories {
    mavenCentral();
    jcenter()
    google()
}

// http://sunghwanjo94.blogspot.kr/2015/07/jcenter.html
// https://github.com/novoda/bintray-release
// $ ./gradlew clean build bintrayUpload -PbintrayUser=BINTRAY_USERNAME -PbintrayKey=BINTRAY_KEY -PdryRun=false
publish {
    userOrg = 'danielworld'
    groupId = 'com.danielworld'
    artifactId = 'android-library'
    publishVersion = '2.0.0'
    desc = 'A collection of Android utilities and framework'
    website = 'https://github.com/DanielWorld/android-library'
    issueTracker = "${website}/issues"
    repository = "${website}.git"
}

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 3
        versionName "2.0.0"
        consumerProguardFiles 'proguard-rules.pro'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.returnDefaultValues = true

        unitTests {
            includeAndroidResources = true
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
//            shrinkResources true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
//            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    flavorDimensions "mode"
//    productFlavors {
//        dev {
//            dimension "mode"
//        }
//        main {
//            dimension "mode"
//        }
//    }
}

ext {
    supportLibraryVersion = '25.3.1'
    okHttpVersion = '3.9.0'
    rxJava2Version = '2.1.4'
    rxAndroid2Version = '2.0.1'
    eventBusVersion = '3.0.0'
    retrofit2Version = '2.2.0'
    gsonVersion = '2.8.2'

    espressoVersion = '2.2.2'
    robolectricVersion = '3.5.1'
    mockitoVersion = '2.+'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibraryVersion}"

//    compile "org.greenrobot:eventbus:${eventBusVersion}"
    compile "io.reactivex.rxjava2:rxjava:${rxJava2Version}"
    compile "io.reactivex.rxjava2:rxandroid:${rxAndroid2Version}"
//    compile "com.google.code.gson:gson:${gsonVersion}"
//    compile "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"
//    compile "com.squareup.retrofit2:retrofit:${retrofit2Version}"
//    compile "com.squareup.retrofit2:converter-gson:${retrofit2Version}"
//    compile "com.squareup.retrofit2:adapter-rxjava2:${retrofit2Version}"


    androidTestCompile("com.android.support.test.espresso:espresso-core:${espressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.robolectric:robolectric:${robolectricVersion}"
    testCompile "org.robolectric:shadows-framework:${robolectricVersion}"
}
